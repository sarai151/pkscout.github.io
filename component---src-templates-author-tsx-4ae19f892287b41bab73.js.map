{"version":3,"sources":["webpack:///./src/components/IconList.tsx","webpack:///./node_modules/@patternfly/react-core/dist/esm/components/Text/TextContent.js","webpack:///./src/templates/author.tsx"],"names":["categoryIconList","props","items","width","marginleft","marginright","undefined","node","map","item","index","push","style","marginLeft","marginRight","paddingTop","hasGutter","align","to","linkroot","slug","height","alt","src","icon","name","TextContent","_a","_a$children","children","_a$className","className","Object","assign","content","displayName","Category","author","data","component","TextVariants","h1","totaladdons","addons","query"],"mappings":"4FAAA,gGAIe,SAASA,EAAiBC,GAOvC,IAAIC,EAAQ,GACRC,EAAQ,OACRC,EAAa,KACbC,EAAc,KAgBlB,YAf4BC,IAAxBL,EAAMC,MAAM,GAAGK,KACjBN,EAAMC,MAAMM,KAAI,SAACC,EAAqBC,GAAtB,OAAqCR,EAAMS,KAAKF,EAAKF,SAErEL,EAAQD,EAAMC,WAEII,IAAhBL,EAAME,QACRA,EAAQF,EAAME,YAESG,IAArBL,EAAMG,aACRA,EAAaH,EAAMG,iBAEKE,IAAtBL,EAAMI,cACRA,EAAcJ,EAAMI,aAIpB,mBACEO,MAAO,CACLT,MAAOA,EACPU,WAAYT,EACZU,YAAaT,EACbU,WAAY,SAGd,YAAC,IAAD,CAASC,WAAS,GACfd,EAAMM,KAAI,SAACC,EAAMC,GAAP,OACT,YAAC,IAAD,KACE,mBAAKO,MAAM,UACT,YAAC,OAAD,CAAMC,GAAIjB,EAAMkB,SAAWV,EAAKW,MAC9B,mBAAKjB,MAAM,MAAMkB,OAAO,MAAMC,IAAI,GAAGC,IAAKd,EAAKe,QAEjD,uBACE,YAAC,OAAD,CAAMN,GAAIjB,EAAMkB,SAAWV,EAAKW,MAAOX,EAAKgB,gB,oCC/C5D,+FAIWC,EAAc,SAAqBC,GAC5C,IAAIC,EAAcD,EAAGE,SACjBA,OAA2B,IAAhBD,EAAyB,KAAOA,EAC3CE,EAAeH,EAAGI,UAClBA,OAA6B,IAAjBD,EAA0B,GAAKA,EAC3C7B,EAAQ,iBAAO0B,EAAI,CAAC,WAAY,cAEpC,OAAO,gBAAoB,MAAOK,OAAOC,OAAO,GAAIhC,EAAO,CACzD8B,UAAW,YAAI,IAAOG,QAASH,KAC7BF,IAENH,EAAYS,YAAc,e,kCCf1B,+JAMe,SAASC,EAAT,GAIZ,IACKC,EADL,EAHDC,KAIoBD,OAEpB,OACE,YAAC,IAAD,KACE,YAAC,IAAD,KACE,YAAC,IAAD,CAAME,UAAWC,IAAaC,IAAKJ,EAAOZ,MAC1C,YAAC,IAAD,6BACwBY,EAAOZ,KAD/B,eACiDY,EAAOK,YAAa,IADrE,aAKF,YAAC,IAAD,CAAUxC,MAAOmC,EAAOM,OAAQxB,SAAS,cAKxC,IAAMyB,EAAQ","file":"component---src-templates-author-tsx-4ae19f892287b41bab73.js","sourcesContent":["import React from \"react\"\nimport { Gallery, GalleryItem } from \"@patternfly/react-core\"\nimport { Link } from \"gatsby\"\n\nexport default function categoryIconList(props: {\n  items: any[]\n  width: string | undefined\n  marginleft: string | undefined\n  marginright: string | undefined\n  linkroot: any\n}) {\n  let items = []\n  let width = \"100%\"\n  let marginleft = \"0%\"\n  let marginright = \"0%\"\n  if (props.items[0].node !== undefined) {\n    props.items.map((item: { node: any }, index: any) => items.push(item.node))\n  } else {\n    items = props.items\n  }\n  if (props.width !== undefined) {\n    width = props.width\n  }\n  if (props.marginleft !== undefined) {\n    marginleft = props.marginleft\n  }\n  if (props.marginright !== undefined) {\n    marginright = props.marginright\n  }\n\n  return (\n    <div\n      style={{\n        width: width,\n        marginLeft: marginleft,\n        marginRight: marginright,\n        paddingTop: \"10px\",\n      }}\n    >\n      <Gallery hasGutter>\n        {items.map((item, index) => (\n          <GalleryItem>\n            <div align=\"center\">\n              <Link to={props.linkroot + item.slug}>\n                <img width=\"150\" height=\"150\" alt=\"\" src={item.icon} />\n              </Link>\n              <div>\n                <Link to={props.linkroot + item.slug}>{item.name}</Link>\n              </div>\n            </div>\n          </GalleryItem>\n        ))}\n      </Gallery>\n    </div>\n  )\n}\n","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Content/content';\nimport { css } from '@patternfly/react-styles';\nexport var TextContent = function TextContent(_a) {\n  var _a$children = _a.children,\n      children = _a$children === void 0 ? null : _a$children,\n      _a$className = _a.className,\n      className = _a$className === void 0 ? '' : _a$className,\n      props = __rest(_a, [\"children\", \"className\"]);\n\n  return React.createElement(\"div\", Object.assign({}, props, {\n    className: css(styles.content, className)\n  }), children);\n};\nTextContent.displayName = 'TextContent';","import React from \"react\"\nimport { Text, TextVariants, TextContent } from \"@patternfly/react-core\"\nimport { graphql } from \"gatsby\"\nimport IconList from \"../components/IconList\"\nimport Layout from \"../gatsby-theme-patternfly/components/Layout\"\n\nexport default function Category({\n  data,\n}: {\n  data: { author: { totaladdons: string; name: string; addons: string[] } }\n}) {\n  const author = data.author\n\n  return (\n    <Layout>\n      <TextContent>\n        <Text component={TextVariants.h1}>{author.name}</Text>\n        <Text>\n          This is the page for {author.name}. They have {author.totaladdons}{\" \"}\n          add-ons.\n        </Text>\n      </TextContent>\n      <IconList items={author.addons} linkroot=\"/addons/\" />\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query($slug: String!) {\n    author(slug: { eq: $slug }) {\n      name\n      totaladdons\n      addons {\n        name\n        slug\n        icon\n      }\n    }\n  }\n`\n"],"sourceRoot":""}