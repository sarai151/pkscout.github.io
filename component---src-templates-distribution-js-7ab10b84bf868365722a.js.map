{"version":3,"sources":["webpack:///./node_modules/@patternfly/react-core/dist/esm/components/Tabs/Tab.js","webpack:///./node_modules/@patternfly/react-core/dist/esm/components/Tabs/TabTitleText.js","webpack:///./src/components/ReleasesContent.js","webpack:///./src/components/ReleasesTabs.js","webpack:///./node_modules/@patternfly/react-core/dist/esm/layouts/Grid/GridItem.js","webpack:///./src/templates/distribution.js","webpack:///./node_modules/@patternfly/react-core/dist/esm/layouts/Stack/StackItem.js","webpack:///./node_modules/@patternfly/react-core/dist/esm/components/Text/TextContent.js"],"names":["Tab","displayName","_a","children","_a$className","className","props","Object","assign","tabsItemText","PrereleaseText","TextContent","Text","component","TextVariants","p","to","DevelopmentText","Description","description","release","DownloadLinks","downloads","Fragment","h3","Stack","hasGutter","map","download","index","StackItem","Button","href","url","target","variant","name","ReleasesTabs","state","activeTabKey","isBox","handleTabClick","event","tabIndex","setState","render","releases","this","Tabs","activeKey","onSelect","eventKey","title","style","id","React","Component","_a$children","_a$span","span","_a$rowSpan","rowSpan","_a$offset","offset","classes","gridItem","modifiers","concat","entries","forEach","_ref","_ref2","propKey","classModifier","key","rowSpanKey","offsetKey","spanValue","rowSpanValue","offsetValue","push","apply","Distribution","dist","data","distribution","Layout","Grid","width","height","alt","src","icon","h1","howto","query","_a$isFilled","isFilled","stackItem","fill","content"],"mappings":"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","file":"component---src-templates-distribution-js-7ab10b84bf868365722a.js","sourcesContent":["export var Tab = function Tab() {\n  return null;\n};\nTab.displayName = 'Tab';","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Tabs/tabs';\nexport var TabTitleText = function TabTitleText(_a) {\n  var children = _a.children,\n      _a$className = _a.className,\n      className = _a$className === void 0 ? '' : _a$className,\n      props = __rest(_a, [\"children\", \"className\"]);\n\n  return React.createElement(\"span\", Object.assign({\n    className: css(styles.tabsItemText, className)\n  }, props), children);\n};\nTabTitleText.displayName = 'TabTitleText';","import React from 'react';\nimport {\n    Text, TextVariants, TextContent,\n    Stack, StackItem,\n    Button,\n} from '@patternfly/react-core'\nimport {Link} from 'gatsby'\n\nfunction PrereleaseText(props) {\n    return (\n        <TextContent>\n            <Text component={TextVariants.p}>\nKodi v19 \"Matrix\" has entered the release cycle. This cycle consists of Alpha, Beta and RC releases followed by the stable Recommended release. If you are interested, you can <Link to=\"http://en.wikipedia.org/wiki/Software_release_life_cycle\">read more about the software release cycle</Link>.\n            </Text>\n            <Text component={TextVariants.p}>\n<b>THESE BUILDS CAN BE UNSTABLE</b> for daily usage and should only be used to help us find possible bugs by those users that do not fear bugs or crashes. If you want a stable HTPC then please install a stable build instead. <b><u>Always backup before using one of these builds.</u></b>\n            </Text>\n            <Text component={TextVariants.p}>\nBe sure to read the following pages before trying these out: <Link to=\"http://kodi.wiki/view/development_builds\">Development builds</Link>, <Link to=\"http://kodi.wiki/view/HOW-TO:Help_with_quality_assurance_testing\">Quality assurance testing</Link>, and <Link to=\"http://kodi.wiki/view/HOW-TO:Submit_a_bug_report\">How to submit a bug report</Link>.\n            </Text>\n        </TextContent>\n    )\n}\n\nfunction DevelopmentText(props){\n    return (\n        <TextContent>\n            <Text component={TextVariants.p}>\nThese development builds, often called “pre-release” builds, are what will eventually lead to the final version. <b>THESE BUILDS ARE UNSTABLE</b> and are for users that do not fear bugs or possibly crashes. If you want a stable HTPC then please install a stable build instead. <b><u>Always backup before using a development build.</u></b>\n            </Text>\n            <Text component={TextVariants.p}>\n<b>Snapshots</b> are semi-stable nightly snapshots of the current development version. They are a step between (often) unstable nightly builds and stable release builds, though they can sometimes still be a bit unstable.\n            </Text>\n            <Text component={TextVariants.p}>\n<b>Nightly builds</b> are made on a daily basis and contain the most recent changes. These should be considered unstable for daily usage and should only be used for to help us find possible issues.\n            </Text>\n            <Text component={TextVariants.p}>\nBe sure to read the following pages before trying these out: <Link to=\"http://kodi.wiki/view/development_builds\">Development builds</Link>, <Link to=\"http://kodi.wiki/view/HOW-TO:Help_with_quality_assurance_testing\">Quality assurance testing</Link>, and <Link to=\"http://kodi.wiki/view/HOW-TO:Submit_a_bug_report\">How to submit a bug report</Link>.\n            </Text>\n        </TextContent>\n    )\n}\n\nexport function Description(props) {\n    if (props.description !== null){\n        return (\n            <TextContent>\n                <Text component={TextVariants.p}>\n                    {props.description}\n                </Text>\n            </TextContent>\n        )\n    } else if (props.release === 'prerelease') {\n        return (\n            <PrereleaseText />\n        )\n    } else if (props.release === 'development') {\n        return (\n            <DevelopmentText />\n        )    \n    }\n}\n\nexport function DownloadLinks(props) {\n    if (props.downloads === null){\n        return null\n    }\n    return(\n        <React.Fragment>\n            <TextContent>\n                <Text component={TextVariants.h3}>Downloads</Text>\n            </TextContent>\n            <Stack hasGutter>\n                {props.downloads.map((download, index) => {\n                    return (\n                        <StackItem>\n                            <Button component=\"a\" href={download.url} target=\"_blank\" variant=\"primary\">\n                                {download.name}\n                            </Button>\n                        </StackItem>\n                    )\n                })}\n            </Stack>\n        </React.Fragment>        \n    )\n}\n","import React from 'react';\nimport {\n    Tabs, Tab, TabTitleText,\n    Stack, StackItem,\n} from '@patternfly/react-core'\nimport { Description, DownloadLinks } from './ReleasesContent'\n\nclass ReleasesTabs extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            activeTabKey: 0,\n            isBox: true\n        }\n        // Toggle currently active tab\n        this.handleTabClick = (event, tabIndex) => {\n            this.setState({\n                activeTabKey: tabIndex,\n                isBox: true\n            })\n        }\n    }\n\n    render() {\n        const releases = this.props.releases\n        const {activeTabKey, isBox} = this.state;\n        return (\n            <div>\n                <Tabs activeKey={activeTabKey} onSelect={this.handleTabClick} isBox={isBox}>\n                    {releases.map((release, index) => {\n                        return (\n                            <Tab eventKey={index} title=<TabTitleText>{release.name}</TabTitleText>>\n                                <Stack hasGutter>\n                                    <StackItem>\n                                        <div style={{'padding-top': '15px'}}>\n                                        <Description description={release.description} release={release.id}/>\n                                        </div>\n                                    </StackItem>\n                                    <StackItem>\n                                        <DownloadLinks downloads={release.downloads} />\n                                    </StackItem>\n                                </Stack>\n                            </Tab>\n                         )\n                    })}\n                </Tabs>\n            </div>\n        );\n    }\n}\n\nexport default ReleasesTabs;","import _slicedToArray from \"/Users/pkscout/Sites/kodi-tv/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/layouts/Grid/grid';\nimport { css } from '@patternfly/react-styles';\nimport { DeviceSizes } from '../../styles/sizes';\nexport var GridItem = function GridItem(_a) {\n  var _a$children = _a.children,\n      children = _a$children === void 0 ? null : _a$children,\n      _a$className = _a.className,\n      className = _a$className === void 0 ? '' : _a$className,\n      _a$span = _a.span,\n      span = _a$span === void 0 ? null : _a$span,\n      _a$rowSpan = _a.rowSpan,\n      rowSpan = _a$rowSpan === void 0 ? null : _a$rowSpan,\n      _a$offset = _a.offset,\n      offset = _a$offset === void 0 ? null : _a$offset,\n      props = __rest(_a, [\"children\", \"className\", \"span\", \"rowSpan\", \"offset\"]);\n\n  var classes = [styles.gridItem, span && styles.modifiers[\"\".concat(span, \"Col\")], rowSpan && styles.modifiers[\"\".concat(rowSpan, \"Row\")], offset && styles.modifiers[\"offset_\".concat(offset, \"Col\")]];\n  Object.entries(DeviceSizes).forEach(function (_ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n        propKey = _ref2[0],\n        classModifier = _ref2[1];\n\n    var key = propKey;\n    var rowSpanKey = \"\".concat(key, \"RowSpan\");\n    var offsetKey = \"\".concat(key, \"Offset\");\n    var spanValue = props[key];\n    var rowSpanValue = props[rowSpanKey];\n    var offsetValue = props[offsetKey];\n\n    if (spanValue) {\n      classes.push(styles.modifiers[\"\".concat(spanValue, \"ColOn\").concat(classModifier)]);\n    }\n\n    if (rowSpanValue) {\n      classes.push(styles.modifiers[\"\".concat(rowSpanValue, \"RowOn\").concat(classModifier)]);\n    }\n\n    if (offsetValue) {\n      classes.push(styles.modifiers[\"offset_\".concat(offsetValue, \"ColOn\").concat(classModifier)]);\n    }\n\n    delete props[key];\n    delete props[rowSpanKey];\n    delete props[offsetKey];\n  });\n  return React.createElement(\"div\", Object.assign({\n    className: css.apply(void 0, classes.concat([className]))\n  }, props), children);\n};\nGridItem.displayName = 'GridItem';","import React from 'react'\nimport Layout from 'patternfly_components/Layout'\nimport ReleasesTabs from 'src/components/ReleasesTabs'\n// import ReleasesAccordion from 'src/components/ReleasesAccordion'\n\nimport {\n    Grid, GridItem,\n    Text, TextVariants, TextContent,\n    Stack, StackItem,\n} from '@patternfly/react-core'\nimport { graphql, Link } from \"gatsby\"\n\nexport default function Distribution({ data }) {\n    const dist = data.distribution\n\n    return (\n        <Layout>\n            <Grid hasGutter>\n                <GridItem span={1}><img width='150' height='150' alt=\"\" src={dist.icon} /></GridItem>\n                <GridItem span={11}>\n                    <Stack hasGutter>\n                        <StackItem>\n                            <TextContent>\n                                <Text component={TextVariants.h1}>{dist.name}</Text>\n                                <Text>If you need extra help, checkout our <Link to={dist.howto}>\"How To\" Guide</Link> for {dist.name}.</Text>\n                            </TextContent>\n                        </StackItem>\n                        <StackItem>\n                            <ReleasesTabs releases={dist.releases} />\n                        </StackItem>\n                    </Stack>\n                </GridItem>\n            </Grid>\n        </Layout>\n    )\n}\n\n\n\n\nexport const query = graphql`\n    query($slug: String!) {\n        distribution(slug: { eq: $slug }) {\n            name\n            icon\n            howto\n            releases {\n                id\n                name\n                title\n                description\n                downloads {\n                    name\n                    url\n                }\n            }\n        }\n    }\n`\n","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/layouts/Stack/stack';\nimport { css } from '@patternfly/react-styles';\nexport var StackItem = function StackItem(_a) {\n  var _a$isFilled = _a.isFilled,\n      isFilled = _a$isFilled === void 0 ? false : _a$isFilled,\n      _a$className = _a.className,\n      className = _a$className === void 0 ? '' : _a$className,\n      _a$children = _a.children,\n      children = _a$children === void 0 ? null : _a$children,\n      props = __rest(_a, [\"isFilled\", \"className\", \"children\"]);\n\n  return React.createElement(\"div\", Object.assign({}, props, {\n    className: css(styles.stackItem, isFilled && styles.modifiers.fill, className)\n  }), children);\n};\nStackItem.displayName = 'StackItem';","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Content/content';\nimport { css } from '@patternfly/react-styles';\nexport var TextContent = function TextContent(_a) {\n  var _a$children = _a.children,\n      children = _a$children === void 0 ? null : _a$children,\n      _a$className = _a.className,\n      className = _a$className === void 0 ? '' : _a$className,\n      props = __rest(_a, [\"children\", \"className\"]);\n\n  return React.createElement(\"div\", Object.assign({}, props, {\n    className: css(styles.content, className)\n  }), children);\n};\nTextContent.displayName = 'TextContent';"],"sourceRoot":""}