{"version":3,"sources":["webpack:///./src/templates/category.tsx","webpack:///./src/components/IconList.tsx","webpack:///./node_modules/@patternfly/react-core/dist/esm/components/Text/TextContent.js"],"names":["Category","category","data","component","TextVariants","h1","name","totaladdons","items","addons","linkroot","query","categoryIconList","props","width","marginleft","marginright","iconwidth","iconheight","undefined","node","map","item","index","push","style","marginLeft","marginRight","paddingTop","hasGutter","align","to","slug","height","alt","src","icon","TextContent","_a","_a$children","children","_a$className","className","Object","assign","content","displayName"],"mappings":"4FAAA,+JAQe,SAASA,EAAT,GAA4B,IACjCC,EADiC,EAARC,KACTD,SAEtB,OACI,YAAC,IAAD,KACI,YAAC,IAAD,KACI,YAAC,IAAD,CAAME,UAAWC,IAAaC,IAAKJ,EAASK,MAC5C,YAAC,IAAD,iCAAgCL,EAASK,KAAzC,gCAA4EL,EAASM,YAArF,mBAEJ,YAAC,IAAD,CAAUC,MAAOP,EAASQ,OAAQC,SAAS,cAMhD,IAAMC,EAAQ,c,kCCvBrB,gGAIe,SAASC,EAAiBC,GASvC,IAAIL,EAAQ,GACRM,EAAQ,OACRC,EAAa,KACbC,EAAc,KACdC,EAAY,MACZC,EAAa,MACbR,EAAW,GAyBf,YAxB4BS,IAAxBN,EAAML,MAAM,GAAGY,KACjBP,EAAML,MAAMa,KAAI,SAACC,EAAqBC,GAAtB,OAAqCf,EAAMgB,KAAKF,EAAKF,SAErEZ,EAAQK,EAAML,WAEIW,IAAhBN,EAAMC,QACRA,EAAQD,EAAMC,YAESK,IAArBN,EAAME,aACRA,EAAaF,EAAME,iBAEKI,IAAtBN,EAAMG,cACRA,EAAcH,EAAMG,kBAECG,IAAnBN,EAAMH,WACRA,EAAWG,EAAMH,eAEKS,IAApBN,EAAMI,YACRA,EAAYJ,EAAMI,gBAEKE,IAArBN,EAAMK,aACRA,EAAaL,EAAMK,YAInB,mBACEO,MAAO,CACLX,MAAOA,EACPY,WAAYX,EACZY,YAAaX,EACbY,WAAY,SAGd,YAAC,IAAD,CAASC,WAAS,GACfrB,EAAMa,KAAI,SAACC,EAAMC,GAAP,OACT,YAAC,IAAD,KACE,mBAAKO,MAAM,UACT,YAAC,OAAD,CAAMC,GAAIrB,EAAWY,EAAKU,MACxB,mBAAKlB,MAAOG,EAAWgB,OAAQf,EAAYgB,IAAI,GAAGC,IAAKb,EAAKc,QAE9D,uBACE,YAAC,OAAD,CAAML,GAAIrB,EAAWY,EAAKU,MAAOV,EAAKhB,gB,oCC7DtD,+FAIW+B,EAAc,SAAqBC,GAC5C,IAAIC,EAAcD,EAAGE,SACjBA,OAA2B,IAAhBD,EAAyB,KAAOA,EAC3CE,EAAeH,EAAGI,UAClBA,OAA6B,IAAjBD,EAA0B,GAAKA,EAC3C5B,EAAQ,iBAAOyB,EAAI,CAAC,WAAY,cAEpC,OAAO,gBAAoB,MAAOK,OAAOC,OAAO,GAAI/B,EAAO,CACzD6B,UAAW,YAAI,IAAOG,QAASH,KAC7BF,IAENH,EAAYS,YAAc","file":"component---src-templates-category-tsx-692018e8c03e63a0c721.js","sourcesContent":["import React from 'react'\nimport Layout from 'patternfly_components/Layout'\nimport {\n    Text, TextVariants, TextContent,\n} from '@patternfly/react-core'\nimport { graphql } from \"gatsby\"\nimport IconList from 'src/components/IconList'\n\nexport default function Category({ data }) {\n    const category = data.category\n\n    return (\n        <Layout>\n            <TextContent>\n                <Text component={TextVariants.h1}>{category.name}</Text>\n                <Text>This is the page for the {category.name} category. This category has {category.totaladdons} addons in it.</Text>\n            </TextContent>\n            <IconList items={category.addons} linkroot='/addons/' />\n        </Layout>\n    )\n}\n\n\nexport const query = graphql`\n    query($slug: String!) {\n        category(slug: { eq: $slug }) {\n            name\n            totaladdons\n            addons {\n                name\n                slug\n                icon\n            }\n        }\n    }\n`\n","import React from \"react\"\nimport { Gallery, GalleryItem } from \"@patternfly/react-core\"\nimport { Link } from \"gatsby\"\n\nexport default function categoryIconList(props: {\n  items: any[]\n  width: string | undefined\n  marginleft: string | undefined\n  marginright: string | undefined\n  iconwidth: string | undefined\n  iconheight: string | undefined\n  linkroot: string | undefined\n}) {\n  let items = []\n  let width = \"100%\"\n  let marginleft = \"0%\"\n  let marginright = \"0%\"\n  let iconwidth = \"150\"\n  let iconheight = \"150\"\n  let linkroot = \"\"\n  if (props.items[0].node !== undefined) {\n    props.items.map((item: { node: any }, index: any) => items.push(item.node))\n  } else {\n    items = props.items\n  }\n  if (props.width !== undefined) {\n    width = props.width\n  }\n  if (props.marginleft !== undefined) {\n    marginleft = props.marginleft\n  }\n  if (props.marginright !== undefined) {\n    marginright = props.marginright\n  }\n  if (props.linkroot !== undefined) {\n    linkroot = props.linkroot\n  }\n  if (props.iconwidth !== undefined) {\n    iconwidth = props.iconwidth\n  }\n  if (props.iconheight !== undefined) {\n    iconheight = props.iconheight\n  }\n\n  return (\n    <div\n      style={{\n        width: width,\n        marginLeft: marginleft,\n        marginRight: marginright,\n        paddingTop: \"10px\",\n      }}\n    >\n      <Gallery hasGutter>\n        {items.map((item, index) => (\n          <GalleryItem>\n            <div align=\"center\">\n              <Link to={linkroot + item.slug}>\n                <img width={iconwidth} height={iconheight} alt=\"\" src={item.icon} />\n              </Link>\n              <div>\n                <Link to={linkroot + item.slug}>{item.name}</Link>\n              </div>\n            </div>\n          </GalleryItem>\n        ))}\n      </Gallery>\n    </div>\n  )\n}\n","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Content/content';\nimport { css } from '@patternfly/react-styles';\nexport var TextContent = function TextContent(_a) {\n  var _a$children = _a.children,\n      children = _a$children === void 0 ? null : _a$children,\n      _a$className = _a.className,\n      className = _a$className === void 0 ? '' : _a$className,\n      props = __rest(_a, [\"children\", \"className\"]);\n\n  return React.createElement(\"div\", Object.assign({}, props, {\n    className: css(styles.content, className)\n  }), children);\n};\nTextContent.displayName = 'TextContent';"],"sourceRoot":""}