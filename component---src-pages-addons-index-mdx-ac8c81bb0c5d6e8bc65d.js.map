{"version":3,"sources":["webpack:///./src/components/CategoryIconList.js","webpack:///./src/pages/addons/index.mdx","webpack:///./src/gatsby-theme-patternfly/templates/Default.js"],"names":["categoryIconList","props","Gallery","categories","map","item","index","GalleryItem","align","width","height","alt","src","node","icon","to","slug","name","pageQuery","_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","AddonsIconList","addons","data","allAddon","edges","allAddonClone","allAddonCloneTwo","allCategory","isMDXComponent","Default","children","variant","PageSectionVariants","light","isFilled"],"mappings":"iVAMe,SAASA,EAAiBC,GAErC,OACI,YAACC,EAAA,EAAD,KACKD,EAAME,WAAWC,KAAI,SAACC,EAAMC,GAAP,OAClB,YAACC,EAAA,EAAD,KACI,mBAAKC,MAAM,UACP,0BACA,mBAAKC,MAAM,MAAMC,OAAO,MAAMC,IAAI,GAAGC,IAAKP,EAAKQ,KAAKC,OACpD,uBACI,YAAC,OAAD,CAAMC,GAAI,oBAAsBV,EAAKQ,KAAKG,MAAOX,EAAKQ,KAAKI,a,gBCP1EC,EAAY,aAuGZC,EAAe,GACtBC,EAAc,CAClBF,YACAC,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGvB,EACF,8BACD,OAAO,YAACoB,EAAD,eAAeD,EAAiBnB,EAAhC,CAAuCuB,WAAYA,EAAYC,QAAQ,cAG5E,iBAAQ,CACN,GAAM,wBADR,wBAGA,iBAAQ,CACN,GAAM,oBADR,oBAGA,YAACC,EAAA,EAAD,CAAgBC,OAAQ1B,EAAM2B,KAAKC,SAASC,MAAOL,QAAQ,mBAC3D,iBAAQ,CACN,GAAM,iBADR,iBAGA,YAACC,EAAA,EAAD,CAAgBC,OAAQ1B,EAAM2B,KAAKG,cAAcD,MAAOL,QAAQ,mBAChE,iBAAQ,CACN,GAAM,oBADR,oBAGA,YAACC,EAAA,EAAD,CAAgBC,OAAQ1B,EAAM2B,KAAKI,iBAAiBF,MAAOL,QAAQ,mBACnE,iBAAQ,CACN,GAAM,cADR,cAGA,YAAC,EAAD,CAAkBtB,WAAYF,EAAM2B,KAAKK,YAAYH,MAAOL,QAAQ,sBAOxEF,EAAWW,gBAAiB,G,kCCtJ5B,0EAyBeC,IAfC,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACd,YAAC,IAAD,KACE,YAAC,IAAD,CAAaC,QAASC,IAAoBC,MAAOC,UAAU,GACzD,YAAC,IAAD,KACGJ,IAGL,YAAC,IAAD","file":"component---src-pages-addons-index-mdx-ac8c81bb0c5d6e8bc65d.js","sourcesContent":["import React from 'react'\nimport {\n    Gallery, GalleryItem\n} from '@patternfly/react-core'\nimport { Link } from \"gatsby\"\n\nexport default function categoryIconList(props) {\n    \n    return (\n        <Gallery>\n            {props.categories.map((item, index) =>\n                <GalleryItem>\n                    <div align=\"center\">\n                        <p>&nbsp;</p>\n                        <img width='150' height='150' alt=\"\" src={item.node.icon} />\n                        <div>\n                            <Link to={'/addons/category/' + item.node.slug}>{item.node.name}</Link>\n                        </div>\n                    </div>\n                </GalleryItem>\n            )}\n        </Gallery>\n    )\n}\n","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/pkscout/Sites/kodi-tv/node_modules/gatsby-theme-patternfly/src/templates/Default.js\";\nimport { graphql } from \"gatsby\";\nimport CategoryIconList from 'src/components/CategoryIconList';\nimport AddonsIconList from 'src/components/AddonsIconList';\nexport const pageQuery = graphql`\n    query {\n        allCategory(sort: {fields: name, order: ASC}) {\n            edges {\n                node {\n                    name\n                    slug\n                    icon\n                }\n            }\n        }\n        allAddon(limit: 5, filter: {featured: {eq: \"true\"}}) {\n            edges {\n                node {\n                    authors {\n                        name\n                        slug\n                    }\n                    description\n                    disclaimer\n                    forum\n                    icons {\n                        localpath\n                    }\n                    lastupdate(formatString: \"MMMM DD, YYYY\")\n                    license\n                    longname\n                    name\n                    news\n                    platforms {\n                        platform\n                        path\n                    }\n                    size\n                    source\n                    summary\n                    version\n                    website\n                }\n            }\n        }\n        allAddonClone(limit: 5, filter: {agetype: {eq: \"new\"}}, sort: {fields: firstseen, order: DESC}) {\n            edges {\n                node {\n                    authors {\n                        name\n                        slug\n                    }\n                    description\n                    disclaimer\n                    forum\n                    icons {\n                        localpath\n                    }\n                    lastupdate(formatString: \"MMMM DD, YYYY\")\n                    license\n                    longname\n                    name\n                    news\n                    platforms {\n                        platform\n                        path\n                    }\n                    size\n                    source\n                    summary\n                    version\n                    website\n                }\n            }\n        }\n        allAddonCloneTwo(limit: 5, filter: {agetype: {eq: \"existing\"}}, sort: {fields: lastupdate, order: DESC}) {\n            edges {\n                node {\n                    authors {\n                        name\n                        slug\n                    }\n                    description\n                    disclaimer\n                    forum\n                    icons {\n                        localpath\n                    }\n                    lastupdate(formatString: \"MMMM DD, YYYY\")\n                    license\n                    longname\n                    name\n                    news\n                    platforms {\n                        platform\n                        path\n                    }\n                    size\n                    source\n                    summary\n                    version\n                    website\n                }\n            }\n        }\n    }\n`;\nexport const _frontmatter = {};\nconst layoutProps = {\n  pageQuery,\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"awesome-add-ons-page\"\n    }}>{`Awesome Add-ons Page`}</h1>\n    <h2 {...{\n      \"id\": \"featured-add-ons\"\n    }}>{`Featured Add-ons`}</h2>\n    <AddonsIconList addons={props.data.allAddon.edges} mdxType=\"AddonsIconList\" />\n    <h2 {...{\n      \"id\": \"new-additions\"\n    }}>{`New Additions`}</h2>\n    <AddonsIconList addons={props.data.allAddonClone.edges} mdxType=\"AddonsIconList\" />\n    <h2 {...{\n      \"id\": \"recently-updated\"\n    }}>{`Recently Updated`}</h2>\n    <AddonsIconList addons={props.data.allAddonCloneTwo.edges} mdxType=\"AddonsIconList\" />\n    <h2 {...{\n      \"id\": \"categories\"\n    }}>{`Categories`}</h2>\n    <CategoryIconList categories={props.data.allCategory.edges} mdxType=\"CategoryIconList\" />\n\n\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import React from 'react';\nimport Layout from 'patternfly_components/Layout';\nimport Footer from '../components/Footer'\nimport {\n  PageSection,\n  PageSectionVariants\n} from '@patternfly/react-core';\nimport PropTypes from 'prop-types';\nimport Text from 'patternfly_components/Markdown/Text';\n\nconst Default = ({ children }) => (\n  <Layout>\n    <PageSection variant={PageSectionVariants.light} isFilled={true}>\n      <Text>\n        {children}\n      </Text>\n    </PageSection>\n    <Footer />\n  </Layout>\n);\n\nDefault.propTypes = {\n  children: PropTypes.node\n};\n\nexport default Default;\n"],"sourceRoot":""}