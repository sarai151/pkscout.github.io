{"version":3,"sources":["webpack:///./src/templates/category.js","webpack:///./node_modules/@patternfly/react-core/dist/esm/components/Text/TextContent.js","webpack:///./src/components/IconList.js"],"names":["Category","category","data","component","TextVariants","h1","name","totaladdons","items","addons","linkroot","query","TextContent","_a","_a$children","children","_a$className","className","props","Object","assign","content","displayName","categoryIconList","width","marginleft","marginright","undefined","node","map","item","index","push","style","hasGutter","align","to","slug","height","alt","src","icon"],"mappings":"4FAAA,+JAQe,SAASA,EAAT,GAA6B,IAClCC,EADiC,EAARC,KACTD,SAEtB,OACI,YAAC,IAAD,KACI,YAAC,IAAD,KACI,YAAC,IAAD,CAAME,UAAWC,IAAaC,IAAKJ,EAASK,MAC5C,YAAC,IAAD,iCAAgCL,EAASK,KAAzC,gCAA4EL,EAASM,YAArF,mBAEJ,YAAC,IAAD,CAAUC,MAAOP,EAASQ,OAAQC,SAAS,cAMhD,IAAMC,EAAK,c,oCCvBlB,+FAIWC,EAAc,SAAqBC,GAC5C,IAAIC,EAAcD,EAAGE,SACjBA,OAA2B,IAAhBD,EAAyB,KAAOA,EAC3CE,EAAeH,EAAGI,UAClBA,OAA6B,IAAjBD,EAA0B,GAAKA,EAC3CE,EAAQ,iBAAOL,EAAI,CAAC,WAAY,cAEpC,OAAO,gBAAoB,MAAOM,OAAOC,OAAO,GAAIF,EAAO,CACzDD,UAAW,YAAI,IAAOI,QAASJ,KAC7BF,IAENH,EAAYU,YAAc,e,kCCf1B,gGAMe,SAASC,EAAiBL,GACrC,IAAIV,EAAQ,GACRgB,EAAQ,OACRC,EAAa,KACbC,EAAc,KAkBlB,YAjB4BC,IAAxBT,EAAMV,MAAM,GAAGoB,KACfV,EAAMV,MAAMqB,KAAI,SAACC,EAAMC,GAAP,OACZvB,EAAMwB,KAAKF,EAAKF,SAGpBpB,EAAQU,EAAMV,WAEEmB,IAAhBT,EAAMM,QACNA,EAAQN,EAAMM,YAEOG,IAArBT,EAAMO,aACNA,EAAaP,EAAMO,iBAEGE,IAAtBT,EAAMQ,cACNA,EAAcR,EAAMQ,aAIpB,mBAAKO,MAAO,CAAC,MAAST,EAAO,cAAeC,EAAY,eAAeC,EAAa,cAAe,SAC/F,YAAC,IAAD,CAASQ,WAAS,GACb1B,EAAMqB,KAAI,SAACC,EAAMC,GAAP,OACP,YAAC,IAAD,KACI,mBAAKI,MAAM,UACP,YAAC,OAAD,CAAMC,GAAIlB,EAAMR,SAAWoB,EAAKO,MAC5B,mBAAKb,MAAM,MAAMc,OAAO,MAAMC,IAAI,GAAGC,IAAKV,EAAKW,QAEnD,uBACI,YAAC,OAAD,CAAML,GAAIlB,EAAMR,SAAWoB,EAAKO,MAAOP,EAAKxB","file":"component---src-templates-category-js-7a4d1260bd5d1634f40b.js","sourcesContent":["import React from 'react'\nimport Layout from 'patternfly_components/Layout'\nimport {\n    Text, TextVariants, TextContent,\n} from '@patternfly/react-core'\nimport { graphql } from \"gatsby\"\nimport IconList from 'src/components/IconList'\n\nexport default function Category({ data }) {\n    const category = data.category\n\n    return (\n        <Layout>\n            <TextContent>\n                <Text component={TextVariants.h1}>{category.name}</Text>\n                <Text>This is the page for the {category.name} category. This category has {category.totaladdons} addons in it.</Text>\n            </TextContent>\n            <IconList items={category.addons} linkroot='/addons/' />\n        </Layout>\n    )\n}\n\n\nexport const query = graphql`\n    query($slug: String!) {\n        category(slug: { eq: $slug }) {\n            name\n            totaladdons\n            addons {\n                name\n                slug\n                icon\n            }\n        }\n    }\n`\n","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Content/content';\nimport { css } from '@patternfly/react-styles';\nexport var TextContent = function TextContent(_a) {\n  var _a$children = _a.children,\n      children = _a$children === void 0 ? null : _a$children,\n      _a$className = _a.className,\n      className = _a$className === void 0 ? '' : _a$className,\n      props = __rest(_a, [\"children\", \"className\"]);\n\n  return React.createElement(\"div\", Object.assign({}, props, {\n    className: css(styles.content, className)\n  }), children);\n};\nTextContent.displayName = 'TextContent';","import React from 'react'\nimport {\n    Gallery, GalleryItem\n} from '@patternfly/react-core'\nimport { Link } from \"gatsby\"\n\nexport default function categoryIconList(props) {\n    var items = []\n    var width = '100%'\n    var marginleft = '0%'\n    var marginright = '0%'\n    if (props.items[0].node !== undefined){\n        props.items.map((item, index) =>\n            items.push(item.node)\n        )\n    } else {\n        items = props.items\n    }\n    if (props.width !== undefined){\n        width = props.width\n    }\n    if (props.marginleft !== undefined){\n        marginleft = props.marginleft\n    }\n    if (props.marginright !== undefined){\n        marginright = props.marginright\n    }\n    \n    return (\n        <div style={{'width': width, 'margin-left': marginleft, 'margin-right':marginright, 'padding-top': '10px'}}>\n            <Gallery hasGutter>\n                {items.map((item, index) =>\n                    <GalleryItem>\n                        <div align=\"center\">\n                            <Link to={props.linkroot + item.slug}>\n                                <img width='150' height='150' alt=\"\" src={item.icon} />\n                            </Link>\n                            <div>\n                                <Link to={props.linkroot + item.slug}>{item.name}</Link>\n                            </div>\n                        </div>\n                    </GalleryItem>\n                )}\n            </Gallery>\n        </div>\n    )\n}\n"],"sourceRoot":""}