{"version":3,"sources":["webpack:///./src/components/IconList.tsx","webpack:///./src/templates/author.tsx"],"names":["categoryIconList","props","items","width","marginleft","marginright","iconwidth","iconheight","linkroot","undefined","node","map","item","index","push","style","marginLeft","marginRight","paddingTop","align","paddingBottom","to","slug","height","alt","src","icon","name","Category","author","data","component","TextVariants","h1","totaladdons","addons","query"],"mappings":"4FAAA,gGAIe,SAASA,EAAiBC,GASvC,IAAIC,EAAQ,GACRC,EAAQ,OACRC,EAAa,KACbC,EAAc,KACdC,EAAY,MACZC,EAAa,MACbC,EAAW,GAyBf,YAxB4BC,IAAxBR,EAAMC,MAAM,GAAGQ,KACjBT,EAAMC,MAAMS,KAAI,SAACC,EAAqBC,GAAtB,OAAqCX,EAAMY,KAAKF,EAAKF,SAErER,EAAQD,EAAMC,WAEIO,IAAhBR,EAAME,QACRA,EAAQF,EAAME,YAESM,IAArBR,EAAMG,aACRA,EAAaH,EAAMG,iBAEKK,IAAtBR,EAAMI,cACRA,EAAcJ,EAAMI,kBAECI,IAAnBR,EAAMO,WACRA,EAAWP,EAAMO,eAEKC,IAApBR,EAAMK,YACRA,EAAYL,EAAMK,gBAEKG,IAArBR,EAAMM,aACRA,EAAaN,EAAMM,YAInB,mBACEQ,MAAO,CACLZ,MAAOA,EACPa,WAAYZ,EACZa,YAAaZ,EACba,WAAY,SAGd,YAAC,IAAD,KACGhB,EAAMS,KAAI,SAACC,EAAMC,GAAP,OACT,YAAC,IAAD,KACE,mBAAKM,MAAM,SAASJ,MAAO,CAACK,cAAe,SACzC,YAAC,OAAD,CAAMC,GAAIb,EAAWI,EAAKU,MACxB,mBAAKnB,MAAOG,EAAWiB,OAAQhB,EAAYiB,IAAI,GAAGC,IAAKb,EAAKc,QAE9D,uBACE,YAAC,OAAD,CAAML,GAAIb,EAAWI,EAAKU,MAAOV,EAAKe,gB,kCC7DtD,+JAMe,SAASC,EAAT,GAIZ,IACKC,EADL,EAHDC,KAIoBD,OAEpB,OACE,YAAC,IAAD,KACE,YAAC,IAAD,KACE,YAAC,IAAD,CAAME,UAAWC,IAAaC,IAAKJ,EAAOF,MAC1C,YAAC,IAAD,KACGE,EAAOF,KADV,QACqBE,EAAOK,YAAa,IADzC,aAIF,YAAC,IAAD,CAAUhC,MAAO2B,EAAOM,OAAQ3B,SAAS,cAKxC,IAAM4B,EAAQ","file":"component---src-templates-author-tsx-1111b4978cfac6a2e847.js","sourcesContent":["import React from \"react\"\nimport { Gallery, GalleryItem } from \"@patternfly/react-core\"\nimport { Link } from \"gatsby\"\n\nexport default function categoryIconList(props: {\n  items: any[]\n  width: string | undefined\n  marginleft: string | undefined\n  marginright: string | undefined\n  iconwidth: string | undefined\n  iconheight: string | undefined\n  linkroot: string | undefined\n}) {\n  let items = []\n  let width = \"100%\"\n  let marginleft = \"0%\"\n  let marginright = \"0%\"\n  let iconwidth = \"150\"\n  let iconheight = \"150\"\n  let linkroot = \"\"\n  if (props.items[0].node !== undefined) {\n    props.items.map((item: { node: any }, index: any) => items.push(item.node))\n  } else {\n    items = props.items\n  }\n  if (props.width !== undefined) {\n    width = props.width\n  }\n  if (props.marginleft !== undefined) {\n    marginleft = props.marginleft\n  }\n  if (props.marginright !== undefined) {\n    marginright = props.marginright\n  }\n  if (props.linkroot !== undefined) {\n    linkroot = props.linkroot\n  }\n  if (props.iconwidth !== undefined) {\n    iconwidth = props.iconwidth\n  }\n  if (props.iconheight !== undefined) {\n    iconheight = props.iconheight\n  }\n\n  return (\n    <div\n      style={{\n        width: width,\n        marginLeft: marginleft,\n        marginRight: marginright,\n        paddingTop: \"10px\",\n      }}\n    >\n      <Gallery>\n        {items.map((item, index) => (\n          <GalleryItem>\n            <div align=\"center\" style={{paddingBottom: \"15px\"}}>\n              <Link to={linkroot + item.slug}>\n                <img width={iconwidth} height={iconheight} alt=\"\" src={item.icon} />\n              </Link>\n              <div>\n                <Link to={linkroot + item.slug}>{item.name}</Link>\n              </div>\n            </div>\n          </GalleryItem>\n        ))}\n      </Gallery>\n    </div>\n  )\n}\n","import React from \"react\"\nimport { Text, TextVariants, TextContent } from \"@patternfly/react-core\"\nimport { graphql } from \"gatsby\"\nimport IconList from \"../components/IconList\"\nimport Layout from \"../gatsby-theme-patternfly/components/Layout\"\n\nexport default function Category({\n  data,\n}: {\n  data: { author: { totaladdons: string; name: string; addons: string[] } }\n}) {\n  const author = data.author\n\n  return (\n    <Layout>\n      <TextContent>\n        <Text component={TextVariants.h1}>{author.name}</Text>\n        <Text>\n          {author.name} has {author.totaladdons}{\" \"}add-ons.\n        </Text>\n      </TextContent>\n      <IconList items={author.addons} linkroot=\"/addons/\" />\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query($slug: String!) {\n    author(slug: { eq: $slug }) {\n      name\n      totaladdons\n      addons {\n        name\n        slug\n        icon\n      }\n    }\n  }\n`\n"],"sourceRoot":""}