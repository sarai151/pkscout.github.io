{"version":3,"sources":["webpack:///./src/pages/download/index.mdx","webpack:///./src/components/IconList.tsx","webpack:///./node_modules/gatsby-theme-patternfly/src/templates/Default.js"],"names":["pageQuery","_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","items","data","allDistribution","edges","linkroot","width","marginleft","marginright","isMDXComponent","categoryIconList","undefined","node","map","item","index","push","style","marginLeft","marginRight","paddingTop","hasGutter","align","to","slug","height","alt","src","icon","name","Default","children","variant","PageSectionVariants","light"],"mappings":"8SAQaA,G,UAAY,cAaZC,EAAe,GACtBC,EAAc,CAClBF,YACAC,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,iBAAQ,CACN,GAAM,wBADR,wBAGA,+SACA,YAAC,IAAD,CAAUC,MAAOF,EAAMG,KAAKC,gBAAgBC,MAAOC,SAAS,aAAaC,MAAM,MAAMC,WAAW,KAAKC,YAAY,KAAKR,QAAQ,cAOlIH,EAAWY,gBAAiB,G,kCC7C5B,gGAIe,SAASC,EAAiBX,GAOvC,IAAIE,EAAQ,GACRK,EAAQ,OACRC,EAAa,KACbC,EAAc,KAgBlB,YAf4BG,IAAxBZ,EAAME,MAAM,GAAGW,KACjBb,EAAME,MAAMY,KAAI,SAACC,EAAqBC,GAAtB,OAAqCd,EAAMe,KAAKF,EAAKF,SAErEX,EAAQF,EAAME,WAEIU,IAAhBZ,EAAMO,QACRA,EAAQP,EAAMO,YAESK,IAArBZ,EAAMQ,aACRA,EAAaR,EAAMQ,iBAEKI,IAAtBZ,EAAMS,cACRA,EAAcT,EAAMS,aAIpB,mBACES,MAAO,CACLX,MAAOA,EACPY,WAAYX,EACZY,YAAaX,EACbY,WAAY,SAGd,YAAC,IAAD,CAASC,WAAS,GACfpB,EAAMY,KAAI,SAACC,EAAMC,GAAP,OACT,YAAC,IAAD,KACE,mBAAKO,MAAM,UACT,YAAC,OAAD,CAAMC,GAAIxB,EAAMM,SAAWS,EAAKU,MAC9B,mBAAKlB,MAAM,MAAMmB,OAAO,MAAMC,IAAI,GAAGC,IAAKb,EAAKc,QAEjD,uBACE,YAAC,OAAD,CAAML,GAAIxB,EAAMM,SAAWS,EAAKU,MAAOV,EAAKe,gB,oCC/C5D,8DAuBeC,IAdC,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACd,YAAC,IAAD,KACE,YAAC,IAAD,CAAaC,QAASC,IAAoBC,OACxC,YAAC,IAAD,KACGH","file":"component---src-pages-download-index-mdx-066c80aa5048315ac7e7.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/pkscout/Documents/GitHub/kodi-tv/node_modules/gatsby-theme-patternfly/src/templates/Default.js\";\nimport { graphql } from \"gatsby\";\nimport IconList from 'src/components/IconList';\nexport const pageQuery = graphql`\n    query {\n        allDistribution {\n            edges {\n                node {\n                    name\n                    icon\n                    slug\n                }\n            }\n        }\n    }\n`;\nexport const _frontmatter = {};\nconst layoutProps = {\n  pageQuery,\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"select-your-platform\"\n    }}>{`Select Your Platform`}</h1>\n    <p>{`Kodi has many flavours, our developers have worked hard to make it support a large range of devices and operating system. We provide final as well as development builds for future final release versions. To get started, simply select the platform that you want to install it on.`}</p>\n    <IconList items={props.data.allDistribution.edges} linkroot='/download/' width='90%' marginleft='5%' marginright='5%' mdxType=\"IconList\" />\n\n\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import React from \"react\"\nimport { Gallery, GalleryItem } from \"@patternfly/react-core\"\nimport { Link } from \"gatsby\"\n\nexport default function categoryIconList(props: {\n  items: any[]\n  width: string | undefined\n  marginleft: string | undefined\n  marginright: string | undefined\n  linkroot: any\n}) {\n  let items = []\n  let width = \"100%\"\n  let marginleft = \"0%\"\n  let marginright = \"0%\"\n  if (props.items[0].node !== undefined) {\n    props.items.map((item: { node: any }, index: any) => items.push(item.node))\n  } else {\n    items = props.items\n  }\n  if (props.width !== undefined) {\n    width = props.width\n  }\n  if (props.marginleft !== undefined) {\n    marginleft = props.marginleft\n  }\n  if (props.marginright !== undefined) {\n    marginright = props.marginright\n  }\n\n  return (\n    <div\n      style={{\n        width: width,\n        marginLeft: marginleft,\n        marginRight: marginright,\n        paddingTop: \"10px\",\n      }}\n    >\n      <Gallery hasGutter>\n        {items.map((item, index) => (\n          <GalleryItem>\n            <div align=\"center\">\n              <Link to={props.linkroot + item.slug}>\n                <img width=\"150\" height=\"150\" alt=\"\" src={item.icon} />\n              </Link>\n              <div>\n                <Link to={props.linkroot + item.slug}>{item.name}</Link>\n              </div>\n            </div>\n          </GalleryItem>\n        ))}\n      </Gallery>\n    </div>\n  )\n}\n","import React from 'react';\nimport Layout from '../components/Layout';\nimport {\n  PageSection,\n  PageSectionVariants\n} from '@patternfly/react-core';\nimport PropTypes from 'prop-types';\nimport Text from '../components/Markdown/Text';\n\nconst Default = ({ children }) => (\n  <Layout>\n    <PageSection variant={PageSectionVariants.light}>\n      <Text>\n        {children}\n      </Text>\n    </PageSection>\n  </Layout>\n);\n\nDefault.propTypes = {\n  children: PropTypes.node\n};\n\nexport default Default;\n"],"sourceRoot":""}