{"version":3,"sources":["webpack:///./src/pages/addons/index.mdx","webpack:///./node_modules/gatsby-theme-patternfly/src/templates/Default.js","webpack:///./src/components/IconList.js"],"names":["pageQuery","_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","items","data","allAddon","edges","linkroot","allAddonClone","allAddonCloneTwo","allCategory","isMDXComponent","Default","children","variant","PageSectionVariants","light","categoryIconList","width","marginleft","marginright","undefined","node","map","item","index","push","style","hasGutter","align","to","slug","height","alt","src","icon","name"],"mappings":"6SAQaA,G,UAAY,cAwCZC,EAAe,GACtBC,EAAc,CAClBF,YACAC,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,iBAAQ,CACN,GAAM,wBADR,wBAGA,iBAAQ,CACN,GAAM,oBADR,oBAGA,YAAC,IAAD,CAAUC,MAAOF,EAAMG,KAAKC,SAASC,MAAOC,SAAS,WAAWL,QAAQ,aACxE,iBAAQ,CACN,GAAM,iBADR,iBAGA,YAAC,IAAD,CAAUC,MAAOF,EAAMG,KAAKI,cAAcF,MAAOC,SAAS,WAAWL,QAAQ,aAC7E,iBAAQ,CACN,GAAM,oBADR,oBAGA,YAAC,IAAD,CAAUC,MAAOF,EAAMG,KAAKK,iBAAiBH,MAAOC,SAAS,WAAWL,QAAQ,aAChF,iBAAQ,CACN,GAAM,cADR,cAGA,YAAC,IAAD,CAAUC,MAAOF,EAAMG,KAAKM,YAAYJ,MAAOC,SAAS,oBAAoBL,QAAQ,cAOxFH,EAAWY,gBAAiB,G,oCCtF5B,8DAuBeC,IAdC,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACd,YAAC,IAAD,KACE,YAAC,IAAD,CAAaC,QAASC,IAAoBC,OACxC,YAAC,IAAD,KACGH,O,kCCbT,gGAMe,SAASI,EAAiBhB,GACrC,IAAIE,EAAQ,GACRe,EAAQ,OACRC,EAAa,KACbC,EAAc,KAkBlB,YAjB4BC,IAAxBpB,EAAME,MAAM,GAAGmB,KACfrB,EAAME,MAAMoB,KAAI,SAACC,EAAMC,GAAP,OACZtB,EAAMuB,KAAKF,EAAKF,SAGpBnB,EAAQF,EAAME,WAEEkB,IAAhBpB,EAAMiB,QACNA,EAAQjB,EAAMiB,YAEOG,IAArBpB,EAAMkB,aACNA,EAAalB,EAAMkB,iBAEGE,IAAtBpB,EAAMmB,cACNA,EAAcnB,EAAMmB,aAIpB,mBAAKO,MAAO,CAAC,MAAST,EAAO,cAAeC,EAAY,eAAeC,EAAa,cAAe,SAC/F,YAAC,IAAD,CAASQ,WAAS,GACbzB,EAAMoB,KAAI,SAACC,EAAMC,GAAP,OACP,YAAC,IAAD,KACI,mBAAKI,MAAM,UACP,YAAC,OAAD,CAAMC,GAAI7B,EAAMM,SAAWiB,EAAKO,MAC5B,mBAAKb,MAAM,MAAMc,OAAO,MAAMC,IAAI,GAAGC,IAAKV,EAAKW,QAEnD,uBACI,YAAC,OAAD,CAAML,GAAI7B,EAAMM,SAAWiB,EAAKO,MAAOP,EAAKY","file":"component---src-pages-addons-index-mdx-de959697cb6677041039.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/pkscout/Sites/kodi-tv/node_modules/gatsby-theme-patternfly/src/templates/Default.js\";\nimport { graphql } from \"gatsby\";\nimport IconList from 'src/components/IconList';\nexport const pageQuery = graphql`\n    query {\n        allCategory(sort: {fields: name, order: ASC}) {\n            edges {\n                node {\n                    name\n                    slug\n                    icon\n                }\n            }\n        }\n        allAddon(filter: {featured: {eq: \"true\"}}) {\n            edges {\n                node {\n                    name\n                    slug\n                    icon\n                }\n            }\n        }\n        allAddonClone(limit: 4, filter: {agetype: {eq: \"new\"}}, sort: {fields: firstseen, order: DESC}) {\n            edges {\n                node {\n                    name\n                    slug\n                    icon\n                }\n            }\n        }\n        allAddonCloneTwo(limit: 4, filter: {agetype: {eq: \"existing\"}}, sort: {fields: lastupdate, order: DESC}) {\n            edges {\n                node {\n                    name\n                    slug\n                    icon\n                }\n            }\n        }\n    }\n`;\nexport const _frontmatter = {};\nconst layoutProps = {\n  pageQuery,\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"awesome-add-ons-page\"\n    }}>{`Awesome Add-ons Page`}</h1>\n    <h2 {...{\n      \"id\": \"featured-add-ons\"\n    }}>{`Featured Add-ons`}</h2>\n    <IconList items={props.data.allAddon.edges} linkroot='/addons/' mdxType=\"IconList\" />\n    <h2 {...{\n      \"id\": \"new-additions\"\n    }}>{`New Additions`}</h2>\n    <IconList items={props.data.allAddonClone.edges} linkroot='/addons/' mdxType=\"IconList\" />\n    <h2 {...{\n      \"id\": \"recently-updated\"\n    }}>{`Recently Updated`}</h2>\n    <IconList items={props.data.allAddonCloneTwo.edges} linkroot='/addons/' mdxType=\"IconList\" />\n    <h2 {...{\n      \"id\": \"categories\"\n    }}>{`Categories`}</h2>\n    <IconList items={props.data.allCategory.edges} linkroot='/addons/category/' mdxType=\"IconList\" />\n\n\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import React from 'react';\nimport Layout from '../components/Layout';\nimport {\n  PageSection,\n  PageSectionVariants\n} from '@patternfly/react-core';\nimport PropTypes from 'prop-types';\nimport Text from '../components/Markdown/Text';\n\nconst Default = ({ children }) => (\n  <Layout>\n    <PageSection variant={PageSectionVariants.light}>\n      <Text>\n        {children}\n      </Text>\n    </PageSection>\n  </Layout>\n);\n\nDefault.propTypes = {\n  children: PropTypes.node\n};\n\nexport default Default;\n","import React from 'react'\nimport {\n    Gallery, GalleryItem\n} from '@patternfly/react-core'\nimport { Link } from \"gatsby\"\n\nexport default function categoryIconList(props) {\n    var items = []\n    var width = '100%'\n    var marginleft = '0%'\n    var marginright = '0%'\n    if (props.items[0].node !== undefined){\n        props.items.map((item, index) =>\n            items.push(item.node)\n        )\n    } else {\n        items = props.items\n    }\n    if (props.width !== undefined){\n        width = props.width\n    }\n    if (props.marginleft !== undefined){\n        marginleft = props.marginleft\n    }\n    if (props.marginright !== undefined){\n        marginright = props.marginright\n    }\n    \n    return (\n        <div style={{'width': width, 'margin-left': marginleft, 'margin-right':marginright, 'padding-top': '10px'}}>\n            <Gallery hasGutter>\n                {items.map((item, index) =>\n                    <GalleryItem>\n                        <div align=\"center\">\n                            <Link to={props.linkroot + item.slug}>\n                                <img width='150' height='150' alt=\"\" src={item.icon} />\n                            </Link>\n                            <div>\n                                <Link to={props.linkroot + item.slug}>{item.name}</Link>\n                            </div>\n                        </div>\n                    </GalleryItem>\n                )}\n            </Gallery>\n        </div>\n    )\n}\n"],"sourceRoot":""}