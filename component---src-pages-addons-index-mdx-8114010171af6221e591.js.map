{"version":3,"sources":["webpack:///./src/pages/addons/index.mdx","webpack:///./src/components/IconList.tsx","webpack:///./node_modules/gatsby-theme-patternfly/src/templates/Default.js"],"names":["pageQuery","_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","items","data","allAddon","edges","linkroot","allAddonClone","allAddonCloneTwo","allCategory","isMDXComponent","categoryIconList","width","marginleft","marginright","iconwidth","iconheight","undefined","node","map","item","index","push","style","marginLeft","marginRight","paddingTop","hasGutter","align","to","slug","height","alt","src","icon","name","Default","children","variant","PageSectionVariants","light"],"mappings":"8SAQaA,G,UAAY,cAwCZC,EAAe,GACtBC,EAAc,CAClBF,YACAC,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,iBAAQ,CACN,GAAM,wBADR,wBAGA,iBAAQ,CACN,GAAM,oBADR,oBAGA,YAAC,IAAD,CAAUC,MAAOF,EAAMG,KAAKC,SAASC,MAAOC,SAAS,WAAWL,QAAQ,aACxE,iBAAQ,CACN,GAAM,iBADR,iBAGA,YAAC,IAAD,CAAUC,MAAOF,EAAMG,KAAKI,cAAcF,MAAOC,SAAS,WAAWL,QAAQ,aAC7E,iBAAQ,CACN,GAAM,oBADR,oBAGA,YAAC,IAAD,CAAUC,MAAOF,EAAMG,KAAKK,iBAAiBH,MAAOC,SAAS,WAAWL,QAAQ,aAChF,iBAAQ,CACN,GAAM,cADR,cAGA,YAAC,IAAD,CAAUC,MAAOF,EAAMG,KAAKM,YAAYJ,MAAOC,SAAS,oBAAoBL,QAAQ,cAOxFH,EAAWY,gBAAiB,G,kCCtF5B,gGAIe,SAASC,EAAiBX,GASvC,IAAIE,EAAQ,GACRU,EAAQ,OACRC,EAAa,KACbC,EAAc,KACdC,EAAY,MACZC,EAAa,MACbV,EAAW,GAyBf,YAxB4BW,IAAxBjB,EAAME,MAAM,GAAGgB,KACjBlB,EAAME,MAAMiB,KAAI,SAACC,EAAqBC,GAAtB,OAAqCnB,EAAMoB,KAAKF,EAAKF,SAErEhB,EAAQF,EAAME,WAEIe,IAAhBjB,EAAMY,QACRA,EAAQZ,EAAMY,YAESK,IAArBjB,EAAMa,aACRA,EAAab,EAAMa,iBAEKI,IAAtBjB,EAAMc,cACRA,EAAcd,EAAMc,kBAECG,IAAnBjB,EAAMM,WACRA,EAAWN,EAAMM,eAEKW,IAApBjB,EAAMe,YACRA,EAAYf,EAAMe,gBAEKE,IAArBjB,EAAMgB,aACRA,EAAahB,EAAMgB,YAInB,mBACEO,MAAO,CACLX,MAAOA,EACPY,WAAYX,EACZY,YAAaX,EACbY,WAAY,SAGd,YAAC,IAAD,CAASC,WAAS,GACfzB,EAAMiB,KAAI,SAACC,EAAMC,GAAP,OACT,YAAC,IAAD,KACE,mBAAKO,MAAM,UACT,YAAC,OAAD,CAAMC,GAAIvB,EAAWc,EAAKU,MACxB,mBAAKlB,MAAOG,EAAWgB,OAAQf,EAAYgB,IAAI,GAAGC,IAAKb,EAAKc,QAE9D,uBACE,YAAC,OAAD,CAAML,GAAIvB,EAAWc,EAAKU,MAAOV,EAAKe,gB,oCC7DtD,8DAuBeC,IAdC,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACd,YAAC,IAAD,KACE,YAAC,IAAD,CAAaC,QAASC,IAAoBC,OACxC,YAAC,IAAD,KACGH","file":"component---src-pages-addons-index-mdx-8114010171af6221e591.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/pkscout/Documents/GitHub/kodi-tv/node_modules/gatsby-theme-patternfly/src/templates/Default.js\";\nimport { graphql } from \"gatsby\";\nimport IconList from 'src/components/IconList';\nexport const pageQuery = graphql`\n    query {\n        allCategory(sort: {fields: name, order: ASC}) {\n            edges {\n                node {\n                    name\n                    slug\n                    icon\n                }\n            }\n        }\n        allAddon(filter: {featured: {eq: \"true\"}}) {\n            edges {\n                node {\n                    name\n                    slug\n                    icon\n                }\n            }\n        }\n        allAddonClone(limit: 4, filter: {agetype: {eq: \"new\"}}, sort: {fields: firstseen, order: DESC}) {\n            edges {\n                node {\n                    name\n                    slug\n                    icon\n                }\n            }\n        }\n        allAddonCloneTwo(limit: 4, filter: {agetype: {eq: \"existing\"}}, sort: {fields: lastupdate, order: DESC}) {\n            edges {\n                node {\n                    name\n                    slug\n                    icon\n                }\n            }\n        }\n    }\n`;\nexport const _frontmatter = {};\nconst layoutProps = {\n  pageQuery,\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"awesome-add-ons-page\"\n    }}>{`Awesome Add-ons Page`}</h1>\n    <h2 {...{\n      \"id\": \"featured-add-ons\"\n    }}>{`Featured Add-ons`}</h2>\n    <IconList items={props.data.allAddon.edges} linkroot='/addons/' mdxType=\"IconList\" />\n    <h2 {...{\n      \"id\": \"new-additions\"\n    }}>{`New Additions`}</h2>\n    <IconList items={props.data.allAddonClone.edges} linkroot='/addons/' mdxType=\"IconList\" />\n    <h2 {...{\n      \"id\": \"recently-updated\"\n    }}>{`Recently Updated`}</h2>\n    <IconList items={props.data.allAddonCloneTwo.edges} linkroot='/addons/' mdxType=\"IconList\" />\n    <h2 {...{\n      \"id\": \"categories\"\n    }}>{`Categories`}</h2>\n    <IconList items={props.data.allCategory.edges} linkroot='/addons/category/' mdxType=\"IconList\" />\n\n\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import React from \"react\"\nimport { Gallery, GalleryItem } from \"@patternfly/react-core\"\nimport { Link } from \"gatsby\"\n\nexport default function categoryIconList(props: {\n  items: any[]\n  width: string | undefined\n  marginleft: string | undefined\n  marginright: string | undefined\n  iconwidth: string | undefined\n  iconheight: string | undefined\n  linkroot: string | undefined\n}) {\n  let items = []\n  let width = \"100%\"\n  let marginleft = \"0%\"\n  let marginright = \"0%\"\n  let iconwidth = \"150\"\n  let iconheight = \"150\"\n  let linkroot = \"\"\n  if (props.items[0].node !== undefined) {\n    props.items.map((item: { node: any }, index: any) => items.push(item.node))\n  } else {\n    items = props.items\n  }\n  if (props.width !== undefined) {\n    width = props.width\n  }\n  if (props.marginleft !== undefined) {\n    marginleft = props.marginleft\n  }\n  if (props.marginright !== undefined) {\n    marginright = props.marginright\n  }\n  if (props.linkroot !== undefined) {\n    linkroot = props.linkroot\n  }\n  if (props.iconwidth !== undefined) {\n    iconwidth = props.iconwidth\n  }\n  if (props.iconheight !== undefined) {\n    iconheight = props.iconheight\n  }\n\n  return (\n    <div\n      style={{\n        width: width,\n        marginLeft: marginleft,\n        marginRight: marginright,\n        paddingTop: \"10px\",\n      }}\n    >\n      <Gallery hasGutter>\n        {items.map((item, index) => (\n          <GalleryItem>\n            <div align=\"center\">\n              <Link to={linkroot + item.slug}>\n                <img width={iconwidth} height={iconheight} alt=\"\" src={item.icon} />\n              </Link>\n              <div>\n                <Link to={linkroot + item.slug}>{item.name}</Link>\n              </div>\n            </div>\n          </GalleryItem>\n        ))}\n      </Gallery>\n    </div>\n  )\n}\n","import React from 'react';\nimport Layout from '../components/Layout';\nimport {\n  PageSection,\n  PageSectionVariants\n} from '@patternfly/react-core';\nimport PropTypes from 'prop-types';\nimport Text from '../components/Markdown/Text';\n\nconst Default = ({ children }) => (\n  <Layout>\n    <PageSection variant={PageSectionVariants.light}>\n      <Text>\n        {children}\n      </Text>\n    </PageSection>\n  </Layout>\n);\n\nDefault.propTypes = {\n  children: PropTypes.node\n};\n\nexport default Default;\n"],"sourceRoot":""}