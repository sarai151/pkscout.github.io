{"version":3,"sources":["webpack:///./node_modules/@patternfly/react-core/dist/esm/components/Tabs/TabTitleText.js","webpack:///./node_modules/@patternfly/react-core/dist/esm/layouts/Stack/StackItem.js","webpack:///./node_modules/@patternfly/react-core/dist/esm/layouts/Grid/GridItem.js","webpack:///./node_modules/@patternfly/react-core/dist/esm/components/Tabs/Tab.js","webpack:///./src/components/ReleasesContent.tsx","webpack:///./src/components/ReleasesTabs.tsx","webpack:///./src/templates/distribution.tsx"],"names":["TabTitleText","_a","children","_a$className","className","props","Object","assign","tabsItemText","displayName","StackItem","_a$isFilled","isFilled","_a$children","stackItem","modifiers","fill","GridItem","_a$span","span","_a$rowSpan","rowSpan","_a$offset","offset","classes","gridItem","concat","entries","forEach","_ref","_ref2","propKey","classModifier","key","rowSpanKey","offsetKey","spanValue","rowSpanValue","offsetValue","push","apply","Tab","PrereleaseText","TextContent","Text","component","TextVariants","p","to","DevelopmentText","Description","description","release","DownloadLinks","downloads","Fragment","h3","Stack","hasGutter","map","download","index","Button","href","url","target","variant","name","ReleasesTabs","state","activeTabKey","isBox","handleTabClick","event","tabIndex","setState","render","releases","this","Tabs","activeKey","onSelect","eventKey","title","style","h2","id","React","Component","Distribution","dist","data","distribution","Layout","Grid","width","height","alt","src","icon","h1","howto","query"],"mappings":"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","file":"component---src-templates-distribution-tsx-a02feda9261558cc8144.js","sourcesContent":["import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Tabs/tabs';\nexport var TabTitleText = function TabTitleText(_a) {\n  var children = _a.children,\n      _a$className = _a.className,\n      className = _a$className === void 0 ? '' : _a$className,\n      props = __rest(_a, [\"children\", \"className\"]);\n\n  return React.createElement(\"span\", Object.assign({\n    className: css(styles.tabsItemText, className)\n  }, props), children);\n};\nTabTitleText.displayName = 'TabTitleText';","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/layouts/Stack/stack';\nimport { css } from '@patternfly/react-styles';\nexport var StackItem = function StackItem(_a) {\n  var _a$isFilled = _a.isFilled,\n      isFilled = _a$isFilled === void 0 ? false : _a$isFilled,\n      _a$className = _a.className,\n      className = _a$className === void 0 ? '' : _a$className,\n      _a$children = _a.children,\n      children = _a$children === void 0 ? null : _a$children,\n      props = __rest(_a, [\"isFilled\", \"className\", \"children\"]);\n\n  return React.createElement(\"div\", Object.assign({}, props, {\n    className: css(styles.stackItem, isFilled && styles.modifiers.fill, className)\n  }), children);\n};\nStackItem.displayName = 'StackItem';","import _slicedToArray from \"/Users/pkscout/Documents/GitHub/kodi-tv/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/layouts/Grid/grid';\nimport { css } from '@patternfly/react-styles';\nimport { DeviceSizes } from '../../styles/sizes';\nexport var GridItem = function GridItem(_a) {\n  var _a$children = _a.children,\n      children = _a$children === void 0 ? null : _a$children,\n      _a$className = _a.className,\n      className = _a$className === void 0 ? '' : _a$className,\n      _a$span = _a.span,\n      span = _a$span === void 0 ? null : _a$span,\n      _a$rowSpan = _a.rowSpan,\n      rowSpan = _a$rowSpan === void 0 ? null : _a$rowSpan,\n      _a$offset = _a.offset,\n      offset = _a$offset === void 0 ? null : _a$offset,\n      props = __rest(_a, [\"children\", \"className\", \"span\", \"rowSpan\", \"offset\"]);\n\n  var classes = [styles.gridItem, span && styles.modifiers[\"\".concat(span, \"Col\")], rowSpan && styles.modifiers[\"\".concat(rowSpan, \"Row\")], offset && styles.modifiers[\"offset_\".concat(offset, \"Col\")]];\n  Object.entries(DeviceSizes).forEach(function (_ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n        propKey = _ref2[0],\n        classModifier = _ref2[1];\n\n    var key = propKey;\n    var rowSpanKey = \"\".concat(key, \"RowSpan\");\n    var offsetKey = \"\".concat(key, \"Offset\");\n    var spanValue = props[key];\n    var rowSpanValue = props[rowSpanKey];\n    var offsetValue = props[offsetKey];\n\n    if (spanValue) {\n      classes.push(styles.modifiers[\"\".concat(spanValue, \"ColOn\").concat(classModifier)]);\n    }\n\n    if (rowSpanValue) {\n      classes.push(styles.modifiers[\"\".concat(rowSpanValue, \"RowOn\").concat(classModifier)]);\n    }\n\n    if (offsetValue) {\n      classes.push(styles.modifiers[\"offset_\".concat(offsetValue, \"ColOn\").concat(classModifier)]);\n    }\n\n    delete props[key];\n    delete props[rowSpanKey];\n    delete props[offsetKey];\n  });\n  return React.createElement(\"div\", Object.assign({\n    className: css.apply(void 0, classes.concat([className]))\n  }, props), children);\n};\nGridItem.displayName = 'GridItem';","export var Tab = function Tab() {\n  return null;\n};\nTab.displayName = 'Tab';","import React from \"react\"\nimport {\n  Text,\n  TextVariants,\n  TextContent,\n  Stack,\n  StackItem,\n  Button,\n} from \"@patternfly/react-core\"\nimport { Link } from \"gatsby\"\n\nfunction PrereleaseText(props) {\n  return (\n    <TextContent>\n      <Text component={TextVariants.p}>\n        Kodi v19 \"Matrix\" has entered the release cycle. This cycle consists of\n        Alpha, Beta and RC releases followed by the stable Recommended release.\n        If you are interested, you can{\" \"}\n        <Link to=\"http://en.wikipedia.org/wiki/Software_release_life_cycle\">\n          read more about the software release cycle\n        </Link>\n        .\n      </Text>\n      <Text component={TextVariants.p}>\n        <b>THESE BUILDS CAN BE UNSTABLE</b> for daily usage and should only be\n        used to help us find possible bugs by those users that do not fear bugs\n        or crashes. If you want a stable HTPC then please install a stable build\n        instead.{\" \"}\n        <b>\n          <u>Always backup before using one of these builds.</u>\n        </b>\n      </Text>\n      <Text component={TextVariants.p}>\n        Be sure to read the following pages before trying these out:{\" \"}\n        <Link to=\"http://kodi.wiki/view/development_builds\">\n          Development builds\n        </Link>\n        ,{\" \"}\n        <Link to=\"http://kodi.wiki/view/HOW-TO:Help_with_quality_assurance_testing\">\n          Quality assurance testing\n        </Link>\n        , and{\" \"}\n        <Link to=\"http://kodi.wiki/view/HOW-TO:Submit_a_bug_report\">\n          How to submit a bug report\n        </Link>\n        .\n      </Text>\n    </TextContent>\n  )\n}\n\nfunction DevelopmentText(props) {\n  return (\n    <TextContent>\n      <Text component={TextVariants.p}>\n        These development builds, often called “pre-release” builds, are what\n        will eventually lead to the final version.{\" \"}\n        <b>THESE BUILDS ARE UNSTABLE</b> and are for users that do not fear bugs\n        or possibly crashes. If you want a stable HTPC then please install a\n        stable build instead.{\" \"}\n        <b>\n          <u>Always backup before using a development build.</u>\n        </b>\n      </Text>\n      <Text component={TextVariants.p}>\n        <b>Snapshots</b> are semi-stable nightly snapshots of the current\n        development version. They are a step between (often) unstable nightly\n        builds and stable release builds, though they can sometimes still be a\n        bit unstable.\n      </Text>\n      <Text component={TextVariants.p}>\n        <b>Nightly builds</b> are made on a daily basis and contain the most\n        recent changes. These should be considered unstable for daily usage and\n        should only be used for to help us find possible issues.\n      </Text>\n      <Text component={TextVariants.p}>\n        Be sure to read the following pages before trying these out:{\" \"}\n        <Link to=\"http://kodi.wiki/view/development_builds\">\n          Development builds\n        </Link>\n        ,{\" \"}\n        <Link to=\"http://kodi.wiki/view/HOW-TO:Help_with_quality_assurance_testing\">\n          Quality assurance testing\n        </Link>\n        , and{\" \"}\n        <Link to=\"http://kodi.wiki/view/HOW-TO:Submit_a_bug_report\">\n          How to submit a bug report\n        </Link>\n        .\n      </Text>\n    </TextContent>\n  )\n}\n\nexport function Description(props: {\n  description: {} | null | undefined\n  release: string\n}) {\n  if (props.description !== null) {\n    return (\n      <TextContent>\n        <Text component={TextVariants.p}>{props.description}</Text>\n      </TextContent>\n    )\n  } else if (props.release === \"prerelease\") {\n    return <PrereleaseText />\n  } else if (props.release === \"development\") {\n    return <DevelopmentText />\n  }\n}\n\nexport function DownloadLinks(props: {\n  downloads: { url: string | undefined; name: React.ReactNode }[] | null\n}) {\n  if (props.downloads === null) {\n    return null\n  }\n  return (\n    <React.Fragment>\n      <TextContent>\n        <Text component={TextVariants.h3}>Downloads</Text>\n      </TextContent>\n      <Stack hasGutter>\n        {props.downloads.map(\n          (\n            download: { url: string | undefined; name: React.ReactNode },\n            index: any\n          ) => {\n            return (\n              <StackItem>\n                <Button\n                  component=\"a\"\n                  href={download.url}\n                  target=\"_blank\"\n                  variant=\"primary\"\n                >\n                  {download.name}\n                </Button>\n              </StackItem>\n            )\n          }\n        )}\n      </Stack>\n    </React.Fragment>\n  )\n}\n","import React from 'react';\nimport {\n  Tabs, Tab, TabTitleText,\n  Text, TextContent, TextVariants,\n  Stack, StackItem,\n} from '@patternfly/react-core'\nimport { Description, DownloadLinks } from './ReleasesContent'\n\nclass ReleasesTabs extends React.Component {\n  constructor(private props: {releases: {name: string, id: string, downloads: {\n    url: string | undefined;\n    name: React.ReactNode;\n  }[], description: string}[]}) {\n    super(props);\n    this.state = {\n      activeTabKey: 0,\n      isBox: true\n    }\n    // Toggle currently active tab\n    this.handleTabClick = (event: any, tabIndex: any) => {\n      this.setState({\n        activeTabKey: tabIndex,\n        isBox: true\n      })\n    }\n  }\n\n  render() {\n    const releases = this.props.releases\n    const {activeTabKey, isBox} = this.state;\n    return (\n      <div>\n        <Tabs activeKey={activeTabKey} onSelect={this.handleTabClick} isBox={isBox}>\n          {releases.map((release, index) => {\n            return (\n              <Tab eventKey={index} title=<TabTitleText>{release.name}</TabTitleText>>\n                <Stack hasGutter>\n                  <StackItem>\n                    <div style={{'paddingTop': '15px'}}>\n                    <TextContent>\n                      <Text component={TextVariants.h2}>{release.title}</Text>\n                    </TextContent>\n                    <Description description={release.description} release={release.id}/>\n                    </div>\n                  </StackItem>\n                  <StackItem>\n                    <DownloadLinks downloads={release.downloads} />\n                  </StackItem>\n                </Stack>\n              </Tab>\n             )\n          })}\n        </Tabs>\n      </div>\n    );\n  }\n}\n\nexport default ReleasesTabs;","import React from 'react'\nimport Layout from 'patternfly_components/Layout'\nimport ReleasesTabs from 'src/components/ReleasesTabs'\n// import ReleasesAccordion from 'src/components/ReleasesAccordion'\n\nimport {\n  Grid, GridItem,\n  Text, TextVariants, TextContent,\n  Stack, StackItem,\n} from '@patternfly/react-core'\nimport { graphql, Link } from \"gatsby\"\n\nexport default function Distribution({ data }) {\n  const dist = data.distribution\n\n  return (\n    <Layout>\n      <Grid hasGutter>\n        <GridItem span={1}><img width='150' height='150' alt=\"\" src={dist.icon} /></GridItem>\n        <GridItem span={11}>\n          <Stack hasGutter>\n            <StackItem>\n              <TextContent>\n                <Text component={TextVariants.h1}>{dist.name}</Text>\n                <Text>If you need extra help, checkout our <Link to={dist.howto}>\"How To\" Guide</Link> for {dist.name}.</Text>\n              </TextContent>\n            </StackItem>\n            <StackItem>\n              <ReleasesTabs releases={dist.releases} />\n            </StackItem>\n          </Stack>\n        </GridItem>\n      </Grid>\n    </Layout>\n  )\n}\n\n\n\n\nexport const query = graphql`\n  query($slug: String!) {\n    distribution(slug: { eq: $slug }) {\n      name\n      icon\n      howto\n      releases {\n        id\n        name\n        title\n        description\n        downloads {\n          name\n          url\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}